import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useState, useEffect, useMemo } from "react";
import Card from "../components/Card";

let emojis =
  "😀 😃 😄 😁 😆 😅 😂 🤣 🥲 ☺️ 😊 😇 🙂 🙃 😉 😌 😍 🥰 😘 😗 😙 😚 😋 😛 😝 😜 🤪 🤨 🧐 🤓 😎 🥸 🤩 🥳 😏 😒 😞 😔 😟 😕 🙁 ☹️ 😣 😖 😫 😩 🥺 😢 😭 😤 😠 😡 🤬 🤯 😳 🥵 🥶 😱 😨 😰 😥 😓 🤗 🤔 🤭 🤫 🤥 😶 😐 😑 😬 🙄 😯 😦 😧 😮 😲 🥱 😴 🤤 😪 😵 🤐 🥴 🤢 🤮 🤧 😷 🤒 🤕 🤑 🤠 😈 👿 👹 👺 🤡 💩 👻 💀 ☠️ 👽 👾 🤖 🎃 😺 😸 😹 😻 😼 😽 🙀 😿 😾".split(
    " "
  );

export interface element {
  value: string;
  key: number;
}

function shuffle(arr: any[]): any[] {
  for (let i = 0; i < arr.length; i++) {
    let random = Math.floor(Math.random() * arr.length);
    let temp = arr[i];
    arr[i] = arr[random];
    arr[random] = temp;
  }
  return arr;
}

let difficulty_styles = [
  styles.grid_layout_easy,
  styles.grid_layout_medium,
  styles.grid_layout_hard,
];

const Home: NextPage = () => {
  const [difficulty, setDifficulty] = useState(1);
  const [cards, setCards] = useState<string[]>([]);
  const [clicked, setClicked] = useState<[element, element]>([
    { value: "", key: NaN },
    { value: "", key: NaN },
  ]);

  useEffect(() => {
    setClicked([
      { value: "", key: NaN },
      { value: "", key: NaN },
    ]);
    emojis = shuffle(emojis);
    let temp = [];
    for (let i = 0; i < 10 * difficulty; i++) {
      let z = i;
      if (i >= (10 * difficulty) / 2) z -= (10 * difficulty) / 2;
      temp.push(emojis[z]);
    }
    temp = shuffle(temp);
    setCards(temp);
  }, [difficulty]);

  let jsx_cards = useMemo(() => {
    const arr = [];
    for (let i = 0; i < cards.length; i++) {
      if (i === 0) console.log(clicked);
      arr.push(
        <Card
          key={`${i}${difficulty}`}
          index={i}
          clicked={clicked}
          value={cards[i]}
          setClicked={setClicked}
        />
      );
    }
    return arr;
  }, [difficulty, cards, clicked]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Test your memory</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <nav className={styles.nav}>
          <button className={styles.button} onClick={(_) => setDifficulty(1)}>
            easy
          </button>
          <button className={styles.button} onClick={(_) => setDifficulty(2)}>
            medium
          </button>
          <button className={styles.button} onClick={(_) => setDifficulty(3)}>
            hard
          </button>
        </nav>
        <section className={difficulty_styles[difficulty - 1]}>
          {jsx_cards}
        </section>
      </main>
    </div>
  );
};

export default Home;
